UNAME_SYSTEM := $(shell uname -s)

CUDAPATH ?= /usr/local/cuda
NVCC = ${CUDAPATH}/bin/nvcc
CXXFLAGS = -fvisibility=hidden -I$(OFXPATH)/include -I$(PATHTOROOT)/include -I$(OFXSEXTPATH)
PLUGINFOLDER = BaldavengerPlugins

ifeq ($(UNAME_SYSTEM), Linux)
	OPENCLPATH = /opt/AMDAPP
	CXXFLAGS += -I${OPENCLPATH}/include -fPIC
	NVCCFLAGS = --compiler-options="-fPIC"
	ARCH = Linux-x86-64
	CUDAFLAGS = -shared -fvisibility=hidden -L${CUDAPATH}/lib64 -lcuda -lcudart
	LINKFLAGS_OR = -shared
	LINKFLAGS = $(LINKFLAGS_OR)
	OFX_DIR = /usr/OFX/Plugins
endif

ifeq ($(UNAME_SYSTEM), Darwin)
	CUDAFLAGS = -L${CUDAPATH}/lib -lcuda -lcudart -F/Library/Frameworks -framework CUDA -framework OpenCL -framework Metal -framework OpenGL -framework AppKit
	AMDFLAGS = -F/Library/Frameworks -framework OpenCL -framework Metal -framework OpenGL -framework AppKit
	CPUFLAGS = -F/Library/Frameworks -framework OpenGL -framework AppKit
	LINKFLAGS_OR = -bundle -fvisibility=hidden -exported_symbols_list $(PATHTOROOT)/include/osxSymbols
	LINKFLAGS = $(LINKFLAGS_OR)
	ARCH = MacOS
	OFX_DIR = /Library/OFX/Plugins
endif

ifeq ($(ENABLECUDA), TRUE)
	CXXFLAGS += -I${CUDAPATH}/include
	LINKFLAGS += $(CUDAFLAGS)
	PLUGINFOLDER = BaldavengerPluginsCUDA
endif

ifeq ($(ENABLEAMD), TRUE)	
	LINKFLAGS += $(AMDFLAGS)
	PLUGINFOLDER = BaldavengerPluginsAMD
endif

ifeq ($(CPU_ONLY), TRUE)
	LINKFLAGS = $(LINKFLAGS_OR)
	LINKFLAGS += $(CPUFLAGS)
	PLUGINFOLDER = BaldavengerPluginsCPU
endif

	BUNDLE_DIR = $(TOP_SRCDIR)/$(PLUGINFOLDER)/$(PLUGINNAME).ofx.bundle/Contents/$(ARCH)/
	BUNDLE_RES = $(TOP_SRCDIR)/$(PLUGINFOLDER)/$(PLUGINNAME).ofx.bundle/Contents/Resources/
	PLUGIN_DIR = $(OFX_DIR)/$(PLUGINFOLDER)/$(PLUGINNAME).ofx.bundle/Contents/$(ARCH)/
	PLUGIN_RES = $(OFX_DIR)/$(PLUGINFOLDER)/$(PLUGINNAME).ofx.bundle/Contents/Resources/
	
ifeq ($(INSTALL_PLUGIN), TRUE)
	BUNDLE_DIR = $(PLUGIN_DIR)
	BUNDLE_RES = $(PLUGIN_RES)
endif

SUPPORTOBJECTS ?= \
ofxsMultiThread.o \
ofxsInteract.o \
ofxsProperty.o \
ofxsLog.o \
ofxsCore.o \
ofxsPropertyValidation.o \
ofxsImageEffect.o \
ofxsParams.o 

VPATH += $(PATHTOROOT)/Library $(OFXSEXTPATH)

$(PLUGINNAME).ofx: $(PLUGINOBJECTS) $(SUPPORTOBJECTS)
	$(CXX) $^ -o $@ $(LINKFLAGS)
	mkdir -p $(BUNDLE_DIR)
	cp $(PLUGINNAME).ofx $(BUNDLE_DIR)
	mkdir -p $(BUNDLE_RES)
	cp $(RESOURCES) $(BUNDLE_RES)
	rm *.o *.ofx
ifeq ($(UNAME_SYSTEM), Darwin)
ifeq ($(ENABLECUDA), TRUE)
	install_name_tool -change @rpath/libcudart.$(CUDA_VERSION).dylib @rpath/libcudart.dylib $(BUNDLE_DIR)$(PLUGINNAME).ofx
endif
endif

$(PLUGINNAME)CudaKernel.o: $(PLUGINNAME)CudaKernel.cu
	${NVCC} -c $< $(NVCCFLAGS)

$(PLUGINNAME)MetalKernel.o: $(PLUGINNAME)MetalKernel.mm
	$(CXX) -c $< $(CXXFLAGS)

%.o: $(PATHTOROOT)/Library/%.cpp
	$(CXX) -c $< $(CXXFLAGS)
	
clean:
	rm -f *.o *.ofx
	rm -fr $(PLUGINNAME).ofx.bundle
